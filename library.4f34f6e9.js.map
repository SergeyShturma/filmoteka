{"mappings":"AAAC,IAAWA,EACV,mBADUA,EAyBTC,OAAOC,QAAQC,WAxBOC,UACpBJ,EAAEI,QACDJ,EAAEK,mBACFL,EAAEM,oBACFN,EAAEO,uBACF,SAAUC,GACR,IACE,IAAIC,EAAIC,KACNC,GAAKF,EAAEG,UAAYH,EAAEI,eAAeC,iBAAiBN,GACrDO,EAAI,EACNJ,EAAEI,IAAMJ,EAAEI,KAAON,KAGfM,EACJ,OAAOC,QAAQL,EAAEI,G,GAErB,mBAAqBf,EAAEiB,UACpBjB,EAAEiB,QAAU,SAAUT,GACrB,IAAK,IAAIC,EAAIC,KAAMD,GAAK,IAAMA,EAAES,UAAY,CAC1C,GAAIT,EAAEL,QAAQI,GAAI,OAAOC,EACzBA,EAAIA,EAAEU,U,CAER,OAAO,I,GAIfP,SAASQ,iBAAiB,oBAAoB,W,kDAGxCC,EAAeT,SAASU,cAAiB,qBAC3CC,EAAkBX,SAACE,iBAAc,mBAGnCU,EAAAC,SAA8B,SACRC,GACpBA,EAAAN,iBAAA,kBACIZ,G,yDAQYI,SAAKU,cAAa,sBAClBK,EAAS,M,wBAOcN,EAARO,UAAVC,IAAJ,UAEsBjB,SAATkB,KAALC,MAANC,IAAN,IAAJ/B,OAAPgC,W,OAIyCV,EAAbE,SAAR,SAAVC,GAC6BA,EAALN,iBAAjB,SAAT,SAAVZ,GACqBE,KAALO,QAAR,UAEmBW,UAAVM,OAAP,UAC6Bb,EAARO,UAAVM,OAAP,UACyB,MAAND,EAAVrB,SAATkB,KAALC,MAANC,IACoCpB,SAATkB,KAALC,MAANI,SAAX,GAC+BvB,SAATkB,KAALC,MAANC,IAAN,GAC0B/B,OAAPmC,SAAT,GAAxB,EAAqBC,SAATJ,GAAX,K,OAI2CrB,SAATkB,KAALV,iBACY,SACA,SAAVZ,GAGH,IAFCA,EAAF8B,UAGU1B,SAATU,cAAd,iBAAjBM,UAAQM,OAAO,UACyBtB,SAATU,cAAd,YAAZM,UAAFM,OAAO,U,IAGkC,GAGEb,EAARD,iBAAjB,SAAT,WACgCR,SAATU,cAAd,iBAAjBM,UAAAM,OAAO,UACiCxB,KAALkB,UAAVM,OAAP,S,OCvFvB,MAAMK,EAAW3B,SAASU,cAAc,wBAElCkB,EACK,gBADLA,EAEE,aAOR,SAASC,IACP7B,SAASkB,KAAKF,UAAUc,OAAOF,GAC/B5B,SAASkB,KAAKF,UAAUc,OAAOF,GAM3B5B,SAASkB,KAAKF,UAAUe,SAASH,IACnCD,EAASK,aAAa,WAAW,GACjCC,aAAaC,QAAQ,eAAgBN,IAC5B5B,SAASkB,KAAKF,UAAUe,SAASH,KAC1CD,EAASK,aAAa,WAAW,GACjCC,aAAaC,QAAQ,eAAgBN,G,CAjBzC5B,SAASkB,KAAKF,UAAUC,IAAIW,GAE5BD,EAASnB,iBAAiB,SAAUqB,GAsB9BI,aAAaE,QAAQ,kBAAoBP,GAC3CC,IChCJ,MAAMO,EAAapC,SAASU,cAAc,eACpC2B,EAAWrC,SAASU,cAAc,aAExC0B,EAAW5B,iBAAiB,SAG5B,WACE6B,EAASrB,UAAUM,OAAO,kBAC1Bc,EAAWpB,UAAUC,IAAI,iB,IAJ3BoB,EAAS7B,iBAAiB,SAO1B,WACE4B,EAAWpB,UAAUM,OAAO,kBAC5Be,EAASrB,UAAUC,IAAI,iB","sources":["src/JS/modals.js","src/JS/theme.js","src/JS/lib-btn.js"],"sourcesContent":["!(function (e) {\n  'function' != typeof e.matches &&\n    (e.matches =\n      e.msMatchesSelector ||\n      e.mozMatchesSelector ||\n      e.webkitMatchesSelector ||\n      function (e) {\n        for (\n          var t = this,\n            o = (t.document || t.ownerDocument).querySelectorAll(e),\n            n = 0;\n          o[n] && o[n] !== t;\n\n        )\n          ++n;\n        return Boolean(o[n]);\n      }),\n    'function' != typeof e.closest &&\n      (e.closest = function (e) {\n        for (var t = this; t && 1 === t.nodeType; ) {\n          if (t.matches(e)) return t;\n          t = t.parentNode;\n        }\n        return null;\n      });\n})(window.Element.prototype);\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  /* Записываем в переменные массив элементов-кнопок и подложку.\n      Подложке зададим id, чтобы не влиять на другие элементы с классом overlay*/\n  var modalButtons = document.querySelectorAll('.js-open-modal'),\n    overlay = document.querySelector('.js-overlay-modal'),\n    closeButtons = document.querySelectorAll('.js-modal-close');\n\n  /* Перебираем массив кнопок */\n  modalButtons.forEach(function (item) {\n    /* Назначаем каждой кнопке обработчик клика */\n    item.addEventListener('click', function (e) {\n      /* Предотвращаем стандартное действие элемента. Так как кнопку разные\n            люди могут сделать по-разному. Кто-то сделает ссылку, кто-то кнопку.\n            Нужно подстраховаться. */\n      e.preventDefault();\n\n      /* При каждом клике на кнопку мы будем забирать содержимое атрибута data-modal\n            и будем искать модальное окно с таким же атрибутом. */\n      var modalId = this.getAttribute('data-modal'),\n        modalElem = document.querySelector(\n          '.modal[data-modal=\"' + modalId + '\"]'\n        );\n\n      /* После того как нашли нужное модальное окно, добавим классы\n            подложке и окну чтобы показать их. */\n      modalElem.classList.add('active');\n      overlay.classList.add('active');\n      // document.body.style.position = 'fixed';\n      document.body.style.top = `-${window.scrollY}px`;\n    }); // end click\n  }); // end foreach\n\n  closeButtons.forEach(function (item) {\n    item.addEventListener('click', function (e) {\n      var parentModal = this.closest('.modal');\n\n      parentModal.classList.remove('active');\n      overlay.classList.remove('active');\n      const scrollY = document.body.style.top;\n      document.body.style.position = '';\n      document.body.style.top = '';\n      window.scrollTo(0, parseInt(scrollY || '0') * -1);\n    });\n  }); // end foreach\n\n  document.body.addEventListener(\n    'keyup',\n    function (e) {\n      var key = e.keyCode;\n\n      if (key == 27) {\n        document.querySelector('.modal.active').classList.remove('active');\n        document.querySelector('.overlay').classList.remove('active');\n      }\n    },\n    false\n  );\n\n  overlay.addEventListener('click', function () {\n    document.querySelector('.modal.active').classList.remove('active');\n    this.classList.remove('active');\n  });\n}); // end ready\n","const checkbox = document.querySelector('#theme-switch-toggle');\n\nconst Theme = {\n  DEFAULT: 'default-theme',\n  DARK: 'dark-theme',\n};\n\ndocument.body.classList.add(Theme.DEFAULT);\n\ncheckbox.addEventListener('change', onCheckboxChange);\n\nfunction onCheckboxChange() {\n  document.body.classList.toggle(Theme.DARK);\n  document.body.classList.toggle(Theme.DEFAULT);\n\n  setThemeInfoToLocalStorage();\n}\n\nfunction setThemeInfoToLocalStorage() {\n  if (document.body.classList.contains(Theme.DEFAULT)) {\n    checkbox.setAttribute('checked', false);\n    localStorage.setItem('active-theme', Theme.DEFAULT);\n  } else if (document.body.classList.contains(Theme.DARK)) {\n    checkbox.setAttribute('checked', true);\n    localStorage.setItem('active-theme', Theme.DARK);\n  }\n}\n\ngetThemeInfoFromLocalStorage();\n\nfunction getThemeInfoFromLocalStorage() {\n  if (localStorage.getItem('active-theme') === Theme.DARK) {\n    onCheckboxChange();\n  }\n}\n","const watchedBtn = document.querySelector('.js-watched');\nconst queueBtn = document.querySelector('.js-queue');\n\nwatchedBtn.addEventListener('click', onWatchedBtnClick);\nqueueBtn.addEventListener('click', onQueueBtnClick);\n\nfunction onWatchedBtnClick() {\n  queueBtn.classList.remove('button--accent');\n  watchedBtn.classList.add('button--accent');\n}\n\nfunction onQueueBtnClick() {\n  watchedBtn.classList.remove('button--accent');\n  queueBtn.classList.add('button--accent');\n}\n\n// add-to-watched/watched-btn\nexport { onWatchedBtnClick, onQueueBtnClick };"],"names":["e1","window","Element","prototype","matches","msMatchesSelector","mozMatchesSelector","webkitMatchesSelector","e","t","this","o","document","ownerDocument","querySelectorAll","n","Boolean","closest","nodeType","parentNode","addEventListener","overlay","querySelector","closeButtons","modalButtons","forEach","item","modalId","classList","add","body","style","top","scrollY","remove","position","scrollTo","parseInt","keyCode","$e4730012bf368a18$var$checkbox","$e4730012bf368a18$var$Theme","$e4730012bf368a18$var$onCheckboxChange","toggle","contains","setAttribute","localStorage","setItem","getItem","$3a3fdb608049bb1d$var$watchedBtn","$3a3fdb608049bb1d$var$queueBtn"],"version":3,"file":"library.4f34f6e9.js.map"}