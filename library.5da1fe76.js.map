{"mappings":"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","sources":["src/library.js","src/JS/lib-btn.js","src/JS/libraryContainer.js","src/JS/renderMobileLibrary.js"],"sourcesContent":["import './JS/modals';\nimport './JS/theme';\nimport './JS/lib-btn';\nimport './JS/libraryContainer';\nimport './JS/renderModalMarkup';\nimport './JS/renderMobileLibrary';","const watchedBtn = document.querySelector('.js-watched');\nconst queueBtn = document.querySelector('.js-queue');\n\nwatchedBtn.addEventListener('click', onWatchedBtnClick);\nqueueBtn.addEventListener('click', onQueueBtnClick);\n\nfunction onWatchedBtnClick() {\n  queueBtn.classList.remove('button--accent');\n  watchedBtn.classList.add('button--accent');\n}\n\nfunction onQueueBtnClick() {\n  watchedBtn.classList.remove('button--accent');\n  queueBtn.classList.add('button--accent');\n}\n\n// add-to-watched/watched-btn\nexport { onWatchedBtnClick, onQueueBtnClick };","import Notiflix from 'notiflix';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nasync function fetchById(id) {\n  const responce = await fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=671c14eb1babf71c7ecd9b35ab5716a8`);\n  const data = await responce.json();\n  return data;\n}\nconst refs = {\n    cardsArea: document.querySelector('.js-cards'),\n    watchedBtn: document.querySelector(`.js-watched`),\n    queueBtn: document.querySelector(`.js-queue`)\n}\nrefs.watchedBtn.addEventListener('click', onWatchedBtn);\nrefs.queueBtn.addEventListener('click', onQueueBtn);\n\nconst hiddenFunny = document.getElementById('error_funny')\n\n     function onWatchedBtn(){\n      document.querySelector('.js-cards').innerHTML = '';\n      const parsedWathcedFilms = JSON.parse(localStorage.getItem('movies-watched'));\n      if (parsedWathcedFilms === null) {\n        Notiflix.Notify.failure('There is nothing in the Watch');\n        hiddenFunny.classList.add('error_funny');\n          return;\n        } else {\n          const arrLocalFilms = parsedWathcedFilms.map(id => {\n            fetchById(id).then(res => {\n              markup(res);\n            });\n          });\n        }\n  }\n  function onQueueBtn() {\n    \n    document.querySelector('.js-cards').innerHTML = '';\n    const parsedQueueFilms = JSON.parse(localStorage.getItem('movies-queue'));\n    if (parsedQueueFilms === null) {\n      Notiflix.Notify.failure('There is nothing in the Queue');\n      hiddenFunny.classList.add('error_funny');\n      return;\n    } else {\n      const arrLocalFilms = parsedQueueFilms.map(id => {\n        return fetchById(id).then(res => {\n          markup(res);\n        });\n      });\n    }\n  }\n\n\nfunction updateMarkup() {\n  if (refs.watchedBtn.classList.contains('button--accent')) {\n    cardsArea.innerHTML = '';\n    const parsedWathcedFilms = JSON.parse(localStorage.getItem('movies-watched'));\n    \n    const arrLocalFilms = parsedWathcedFilms.map(id => {\n      return fetchById(id).then(res => {\n        markup(res);\n      });\n    });\n    return;\n  }\n\n  refs.cardsArea.innerHTML = '';\n  const parsedQueueFilms = JSON.parse(localStorage.getItem('movies-queue'));\n  const arrLocalFilms = parsedQueueFilms.map(filmId => {\n    return fetchOneMovie(filmId).then(res => {\n      markup(res);\n    });\n  });\n}\n\n\n\nfunction markup(res) {\nconst { poster_path, title, id, release_date, genres, vote_average } = res;\nconst movieGenres = genres.map(({ name }) => name).join(', ');\nconst markup = `<li class='js-card' data-id=\"${id}\">\n<button type=\"button\" class='js-on-card'>\n<img src=\"https://image.tmdb.org/t/p/w500${poster_path}\" alt=\"\" class='js-card-img'>\n</button>\n<div class='js-movie-descr'>\n<p class='js-movie-title'>${title.toUpperCase()}</p>\n<div class='js-movie-genres'>\n<p>${movieGenres} | ${release_date.slice(0, 4)}</p>\n<span class='js-movie-reiting'>${String(vote_average).slice(0, 3)}</span>\n</div>\n</div>\n</li>`;\n\n\n  \n  refs.cardsArea.insertAdjacentHTML('beforeend', markup);\n}\n","function fetchOneMovie(filmId) {\n    return fetch(\n      `https://api.themoviedb.org/3/movie/${filmId}?api_key=671c14eb1babf71c7ecd9b35ab5716a8`\n    ).then(resp => {\n      if (!resp.ok) {\n        throw new Error(resp.statusText);\n      }\n      return resp.json();\n    });\n  }\n  \n  function movieClick(evt) {\n    evt.preventDefault();\n  \n    const selectedFilm = evt.target.closest('.js-card');\n    console.log(selectedFilm);\n    const filmId = selectedFilm.dataset.id;\n    console.log(filmId);\n  \n    fetchOneMovie(filmId).then(data => {\n      // console.log(data);\n      showModal(data);\n    });\n  }\n  \n  const backdrop = document.querySelector('.js-movie-modal-backdrop');\n  const list = document.querySelector('.js-cards');\n  const filmModal = document.querySelector('.js-movie-modal');\n  const filmModalbackdrop = document.querySelector('.js-movie-modal-backdrop');\n  \n  filmModalbackdrop.addEventListener('click', closeModal);\n  list.addEventListener('click', movieClick);\n  \n  function showBackdrop() {\n    backdrop.classList.remove('is-hidden');\n    document.body.style = `overflow-y: hidden`;\n  }\n  \n  function closeBackdrop() {\n    backdrop.classList.add('is-hidden');\n    backdrop.innerHTML = '';\n    document.body.style = `overflow-y: visible`;\n  }\n  \n  function showModal(data) {\n    renderModal(data);\n    const closeBtn = document.querySelector('.js-movie-modal__close-btn');\n    closeBtn.addEventListener('click', closeModal);\n    filmModal.classList.remove('is-hidden');\n  \n    showBackdrop();\n    document.addEventListener('keydown', onEscKeyPress);\n  \n    // locStorage(data);\n  }\n  \n  function closeModal() {\n    filmModal.classList.add('is-hidden');\n  \n    closeBackdrop();\n    document.removeEventListener('keydown', onEscKeyPress);\n  }\n  \n  function onEscKeyPress(evt) {\n    if (evt.code === 'Escape') {\n      closeModal();\n    }\n  }\n  \n  function renderModal(data) {\n    const arr = [];\n    arr.push(data);\n    const markup = arr\n      .map(\n        ({\n          title,\n          vote_average,\n          vote_count,\n          popularity,\n          original_title,\n          genres,\n          overview,\n          poster_path,\n        }) => {\n          const genreList = genres.map(genre => genre.name);\n  \n          return `<div class=\"js-movie-modal__content\">\n          <button class = \"js-movie-modal__close-btn\">\n          <svg width=\"30\" height=\"30\" viewBox=\"0 0 30 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path d=\"M8 8L22 22\" stroke=\"black\" stroke-width=\"2\"/>\n              <path d=\"M8 22L22 8\" stroke=\"black\" stroke-width=\"2\"/>\n          </svg>              \n          </button>\n          <div class=\"js-movie-modal__poster\">\n              <img class = \"js-movie-modal__img\" src=\"https://image.tmdb.org/t/p/w500${poster_path}\" alt=\"${title}\">\n          </div>\n          <div class=\"movie-modal__info-about\">\n              <h1 class=\"js-movie-modal__title\">${title}</h1>\n      <div class=\"movie-modal__info\">\n          <div class=\"movie-modal__info-name\">\n              <p class=\"info-name\">Vote / Votes</p>\n              <p class=\"info-name\">Popularity</p>\n              <p class=\"info-name\">Original Title</p>\n              <p class=\"info-name\">Genre</p>\n          </div>\n          <div class=\"movie-modal__info-value\">\n              <p class=\"js-info-value\">\n                  <span class=\"js-info-value__vote\">${vote_average}</span>&ensp;/&ensp; \n                  <span class=\"js-info-value__votes\">${vote_count}</span>\n              </p>\n              <p class=\"js-info-value\">${popularity}</p>\n              <p class=\"js-info-value\">${original_title}</p>\n              <p class=\"js-info-value\">${genreList.splice(0, 3)}</p>\n          </div>\n      </div>\n      <h2 class=\"movie-modal__about\">About </h2>\n      <p class=\"js-movie-modal__about-text\">${overview}</p>\n      <ul class = \"movie-modal__btn-list\">\n          <li class = \"movie-modal__btn-list-item\">\n              <button class=\"js-movie-modal__btn remove-watched\" type=\"button\">remove from Watched</button>\n          </li>\n          <li class = \"movie-modal__btn-list-item\">\n              <button class=\"js-movie-modal__btn remove-queue\" type=\"button\">remove from queue</button>\n          </li>\n      </ul>\n          </div>\n      </div>`;\n        }\n      )\n      .join('');\n    filmModal.innerHTML = markup;\n  }\n  \n  const watchedBtn = document.querySelector('.remove-watched');\n  const queueBtn = document.querySelector('.remove-queue');\n  \n  watchedBtn.addEventListener('click', onRemoveWatchedClick);\n  queueBtn.addEventListener('click', onRemoveQueueBtnClick);\n  \n  \n  \n  function onRemoveWatchedClick() {\n      console.log(`hello world`);\n  //     const filmId = watchedBtn.dataset.id;\n  //     const parsedWathcedFilms = JSON.parse(localStorage.getItem('movies-watched'));\n  //     if (parsedWathcedFilms.includes(filmId)) {\n  //         localStorage.removeItem('movies-watched', JSON.stringify([filmIdToLS]));\n  //       };\n  //       parsedWathcedFilms.splice(parsedWathcedFilms.indexOf(filmId), 1);\n  //   localStorage.setItem('movies-watched', JSON.stringify(parsedWathcedFilms));\n    }\n    "],"names":["parcelRequire","$3a3fdb608049bb1d$var$watchedBtn","document","querySelector","$3a3fdb608049bb1d$var$queueBtn","addEventListener","classList","remove","add","$7Y9D8","async","$0ca8fa5a2c2f181b$var$fetchById","id","responce","fetch","json","$0ca8fa5a2c2f181b$var$refs","cardsArea","watchedBtn","queueBtn","innerHTML","parsedWathcedFilms","JSON","parse","localStorage","getItem","$parcel$interopDefault","Notify","failure","$0ca8fa5a2c2f181b$var$hiddenFunny","map","then","res","$0ca8fa5a2c2f181b$var$markup","parsedQueueFilms","getElementById","poster_path","title","release_date","genres","vote_average","movieGenres","name","join","markup1","toUpperCase","slice","String","insertAdjacentHTML","$070c12f34ff58438$var$backdrop","$070c12f34ff58438$var$list","$070c12f34ff58438$var$filmModal","$070c12f34ff58438$var$closeModal","body","style","removeEventListener","$070c12f34ff58438$var$onEscKeyPress","evt","code","preventDefault","selectedFilm","target","closest","console","log","filmId","dataset","resp","ok","Error","statusText","$070c12f34ff58438$var$fetchOneMovie","data","arr","push","markup","vote_count","popularity","original_title","overview","genre","splice","$070c12f34ff58438$var$renderModal","$070c12f34ff58438$var$showModal","$070c12f34ff58438$var$watchedBtn","$070c12f34ff58438$var$queueBtn","onRemoveQueueBtnClick"],"version":3,"file":"library.5da1fe76.js.map"}