{"mappings":"AAAA,MAAMA,EAAS,CACb,CAAEC,GAAI,GAAIC,KAAM,UAChB,CAAED,GAAI,GAAIC,KAAM,aAChB,CAAED,GAAI,GAAIC,KAAM,aAChB,CAAED,GAAI,GAAIC,KAAM,UAChB,CAAED,GAAI,GAAIC,KAAM,SAChB,CAAED,GAAI,GAAIC,KAAM,eAChB,CAAED,GAAI,GAAIC,KAAM,SAChB,CAAED,GAAI,MAAOC,KAAM,UACnB,CAAED,GAAI,GAAIC,KAAM,WAChB,CAAED,GAAI,GAAIC,KAAM,WAChB,CAAED,GAAI,GAAIC,KAAM,UAChB,CAAED,GAAI,MAAOC,KAAM,SACnB,CAAED,GAAI,KAAMC,KAAM,WAClB,CAAED,GAAI,MAAOC,KAAM,WACnB,CAAED,GAAI,IAAKC,KAAM,mBACjB,CAAED,GAAI,MAAOC,KAAM,YACnB,CAAED,GAAI,GAAIC,KAAM,YAChB,CAAED,GAAI,MAAOC,KAAM,OACnB,CAAED,GAAI,GAAIC,KAAM,YAUZC,EAAO,CACTC,UAAWC,SAASC,cAAc,cAM3BC,MAAM,4FACRC,MAAKC,IACF,IAAKA,EAAKC,GACN,MAAM,IAAIC,MAAMF,EAAKG,YACvB,OAAOH,EAAKI,MAAM,IAQ3BL,MAAKM,GAAQA,EAAKC,UAClBP,MAAKQ,GAASA,EAAMC,KAAIC,IACzB,IAAIC,EAAc,GAClB,IAAK,MAAMC,KAASpB,EAChBkB,EAAKG,UAAUC,SAASF,EAAMnB,KAC1BkB,EAAYI,KAAKH,EAAMlB,MAG3BiB,EAAYK,OAAS,IACrBL,EAAc,CAACA,EAAYM,MAAM,EAAG,GAAG,cAE3C,MAAMC,EAAa,uEACQR,EAAKS,2EACJT,EAAKU,MAAMC,+DAElCV,OAAiBD,EAAKY,aAAaL,MAAM,EAAG,8CAChBM,OAAOb,EAAKc,cAAcP,MAAM,EAAG,mCAIpEtB,EAAKC,UAAU6B,mBAAmB,YAAaP,EAAW,MAEzDQ,OAAMC,GAAOC,QAAQC,IAAIF","sources":["src/JS/api.js"],"sourcesContent":["const genres = [\n  { id: 28, name: 'Action' },\n  { id: 12, name: 'Adventure' },\n  { id: 16, name: 'Animation' },\n  { id: 35, name: 'Comedy' },\n  { id: 80, name: 'Crime' },\n  { id: 99, name: 'Documentary' },\n  { id: 18, name: 'Drama' },\n  { id: 10751, name: 'Family' },\n  { id: 14, name: 'Fantasy' },\n  { id: 36, name: 'History' },\n  { id: 27, name: 'Horror' },\n  { id: 10402, name: 'Music' },\n  { id: 9648, name: 'Mystery' },\n  { id: 10749, name: 'Romance' },\n  { id: 878, name: 'Science Fiction' },\n  { id: 10770, name: 'TV Movie' },\n  { id: 53, name: 'Thriller' },\n  { id: 10752, name: 'War' },\n  { id: 37, name: 'Western' },\n];\n\nconst API_KEY = '671c14eb1babf71c7ecd9b35ab5716a8';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst IMG_BASE_URL = 'https://image.tmdb.org/t/p/w500/';\nconst MOVIE_ID = '619930';\n\n\n\nconst refs = {\n    cardsArea: document.querySelector('.js-cards')\n};\n\ncreateTrendCardMarkup()\n\nfunction getTrendingMovies() {\n    return fetch(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`)\n        .then(resp => {\n            if (!resp.ok) {\n                throw new Error(resp.statusText)\n            } return resp.json()\n        })\n        \n};\n\n\nfunction createTrendCardMarkup() {\ngetTrendingMovies()\n    .then(data => data.results)\n    .then(cards => cards.map(card => { \n    let movieGenres = []; \n    for (const genre of genres) {\n    if (card.genre_ids.includes(genre.id)) {\n            movieGenres.push(genre.name)\n                }\n    }\n    if (movieGenres.length > 3) {\n        movieGenres = [movieGenres.slice(0, 3),' ...other']\n    }\n    const cardMarkup = `<li class='js-card'>\n    <img src=\"${IMG_BASE_URL}${card.poster_path}\" alt=\"\" class='js-card-img'>\n    <p class='js-movie-title'>${card.title.toUpperCase()}</p>\n    <div class='js-movie-descr'>\n    <p>${movieGenres} | ${card.release_date.slice(0, 4)}</p>\n    <span class='js-movie-reiting'>${String(card.vote_average).slice(0, 3)}</span>\n    </div>\n    </li>`\n    \n    refs.cardsArea.insertAdjacentHTML('beforeend', cardMarkup)\n    }))\n    .catch(err => console.log(err));   \n}\n    \n\n\n\n\n// function getGenres() {\n//     return fetch(`${BASE_URL}/genre/movie/list?api_key=${API_KEY}&language=en-US`)\n//     .then(resp => {\n//             if (!resp.ok) {\n//                 throw new Error(resp.statusText)\n//             } return resp.json()\n//     })\n//     .catch(err => console.log(err))\n// }\n\n\n\n      \n// getTrendingMovies()\n//     .then(data => data.results)  \n//     .then(cards => cards.map(card => {\n//     getGenres()\n//     .then(r => r.genres)\n//     .then(data => { \n//         movieGenres = [];\n//         for (const value of data) {\n//         if (card.genre_ids.includes(value.id)) {\n//             movieGenres.push(value.name)\n//                 } \n//             }\n             \n//         })\n//     })).then(arr => console.log(arr))\n   \n\n    \n    \n    \n    \n    \n    \n// function getSearchMovies() {\n//     return fetch(`${BASE_URL}/search/movie?api_key=${API_KEY}&language=ru\n//     &page=1&include_adult=false`)\n//     .then(resp => {\n//             if (!resp.ok) {\n//                 throw new Error(resp.statusText)\n//             } return resp.json()\n//     })\n//     .catch(err => console.log(err))\n// }\n\n// console.log(getSearchMovies());\n\n// function getMovieDetails() {\n//     return fetch(`${BASE_URL}/movie/${MOVIE_ID}?api_key=${API_KEY}`)\n//     .then(resp => {\n//             if (!resp.ok) {\n//                 throw new Error(resp.statusText)\n//             } return resp.json()\n//         })\n// };\n\n// getMovieDetails()\n//     .then(data => console.log(data))\n//     .catch(err => console.log(err));\n\n// function getMovieVideos() {\n//     return fetch(`${BASE_URL}/movie/619930/videos?api_key=${API_KEY}`)\n//         .then(resp => {\n//             if (!resp.ok) {\n//                 throw new Error(resp.statusText)\n//             } return resp.json()\n//         })\n// }\n\n// console.log(getMovieVideos());"],"names":["$d637584d1bf81fd1$var$genres","id","name","$d637584d1bf81fd1$var$refs","cardsArea","document","querySelector","fetch","then","resp","ok","Error","statusText","json","data","results","cards","map","card","movieGenres","genre","genre_ids","includes","push","length","slice","cardMarkup","poster_path","title","toUpperCase","release_date","String","vote_average","insertAdjacentHTML","catch","err","console","log"],"version":3,"file":"index.cdc5b50d.js.map"}